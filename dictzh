#!/bin/bash
progName="$( basename "$0" )"
dbPath="$HOME/opt/perso/dictzh/cedict_1_0_ts_utf-8_mdbg.txt"
version=0.1

warn() { local fmt="$1"; shift; printf "$progName: $fmt\n" "$@" >&2; }
die () { local st="$?"; warn "$@"; exit "$st"; } 
define(){ IFS='\n' read -r -d '' ${1} || true; }

define helpString <<EOF
$progName v$version - Bash Mandarin/English dictionary based on cedict.
It is volontary extremely basic, read the source and you will now what I mean.
Public domain, 2016 GrepSuzette
Syntax: $progName [OPTIONS] "[terms]"

OPTIONS:
 --help -h        Show help
 --version -v     Show version and exit
 --no-sep         Omit the ------ separator

Examples
    $progname "ni3 hao3"        # pinyin are separated by a space
    $progname "lao. shi."       # grep regex are used, so the dots will match any char
    $progname "^你好 "          # search for a chinese def and only that
    $progname hello             # loosely search for an english term

EOF

# terms="$*"

for i in "$@"; do
    case $i in
        # note for help and version, we removed the shift. no options are accept.
        --help | -h ) echo "$helpString"; exit 0 ;;
        --version | -v ) echo "$version"; exit 0 ;;
        --no-sep*) shift ; optNoSep=1 ;;
        -* ) echo "Unknown option: $1"; exit 1 ;;
        # *) terms="$*"; shift ;;
        *) 
            terms="$*" 
            shift
            if [[ "$terms" =~ ^\'(.*)\'$ ]]; then
                terms="${BASH_REMATCH[1]}"
            fi
            ;;
    esac
done

# echo "TERMS:$terms."
# exit 0

if [[ -z $terms ]]; then
    echo "$helpString"
    exit 0
fi
# see perldoc Text::Tabs
# perl -MText::Tabs -n -e 'print expand $_'
[[ -z $optNoSep ]] && echo ----------------------------------
grep "$terms" "$dbPath" --color=always \
    | perl -Mutf8 -p -e "s/^([^ ]*) +([^ ]*) +\[([^\]]*)\] +\/(.*)\//\033[1;37m\2\033[0m\t\033[0m\4  \033[1;30m[\3]\\033[0m/" \
    # | cut -d' ' -f2- \
    # | perl -MText::Tabs -Mutf8 -n -e '$tabstop = 25; print expand $_'
    # | column -s'~' -t 
    # | sed 's#^\(.*\) \+\(.*\) \+\[\(.*\)\] \+/\(.*\)/#\2 [\3] \4\n#'
    # | awk 'BEGIN { FS = " " } ; \
        # /^(.*) (.*) (\[.*\]) (.*)/ { print $2 "--" $3 " --  " $4}'
    # | column
